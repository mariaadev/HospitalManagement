openapi: 3.0.0
info:
  title: Hospital Management API
  version: 1.0.0
  description: API para la gestión de un hospital incluyendo pacientes, camas, habitaciones, asignaciones, historial de altas, usuarios y roles.
servers:
  - url: http://localhost:5000/api

paths:
  /pacientes:
    get:
      summary: Obtener todos los pacientes
      responses:
        "200":
          description: Lista de pacientes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Paciente"
    post:
      summary: Crear un nuevo paciente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Paciente"
      responses:
        "201":
          description: Paciente creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Paciente"

  /pacientes/{ID_Paciente}:
    get:
      summary: Obtener un paciente específico
      parameters:
        - name: ID_Paciente
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Detalles del paciente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Paciente"
    put:
      summary: Editar un paciente existente
      parameters:
        - name: ID_Paciente
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Paciente"
      responses:
        "200":
          description: Paciente actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Paciente"
    delete:
      summary: Eliminar un paciente existente
      parameters:
        - name: ID_Paciente
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Paciente eliminado

  /camas:
    get:
      summary: Obtener todas las camas
      responses:
        "200":
          description: Lista de camas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cama"
    post:
      summary: Crear una nueva cama
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cama"
      responses:
        "201":
          description: Cama creada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cama"

  /camas/{Ubicacion}:
    get:
      summary: Obtener una cama específica
      parameters:
        - name: Ubicacion
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Detalles de la cama
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cama"
    put:
      summary: Editar una cama existente
      parameters:
        - name: Ubicacion
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cama"
      responses:
        "200":
          description: Cama actualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cama"
    delete:
      summary: Eliminar una cama existente
      parameters:
        - name: Ubicacion
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Cama eliminada

  /habitaciones:
    get:
      summary: Obtener todas las habitaciones
      responses:
        "200":
          description: Lista de habitaciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Habitacion"
    post:
      summary: Crear una nueva habitación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Habitacion"
      responses:
        "201":
          description: Habitación creada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Habitacion"

  /habitaciones/{ID_Habitacion}:
    get:
      summary: Obtener una habitación específica
      parameters:
        - name: ID_Habitacion
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Detalles de la habitación
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Habitacion"
    put:
      summary: Editar una habitación existente
      parameters:
        - name: ID_Habitacion
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Habitacion"
      responses:
        "200":
          description: Habitación actualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Habitacion"
    delete:
      summary: Eliminar una habitación existente
      parameters:
        - name: ID_Habitacion
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Habitación eliminada

  /asignaciones:
    get:
      summary: Obtener todas las asignaciones
      responses:
        "200":
          description: Lista de asignaciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Asignacion"
    post:
      summary: Crear una nueva asignación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Asignacion"
      responses:
        "201":
          description: Asignación creada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asignacion"

  /asignaciones/{ID_Asignacion}:
    get:
      summary: Obtener una asignación específica
      parameters:
        - name: ID_Asignacion
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Detalles de la asignación
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asignacion"
    put:
      summary: Editar una asignación existente
      parameters:
        - name: ID_Asignacion
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Asignacion"
      responses:
        "200":
          description: Asignación actualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asignacion"
    delete:
      summary: Eliminar una asignación existente
      parameters:
        - name: ID_Asignacion
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Asignación eliminada

  /historialAltas:
    get:
      summary: Obtener todo el historial de altas
      responses:
        "200":
          description: Lista de historial de altas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HistorialAlta"
    post:
      summary: Crear un nuevo registro de alta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HistorialAlta"
      responses:
        "201":
          description: Registro de alta creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistorialAlta"

  /historialAltas/{ID_Historial}:
    get:
      summary: Obtener un registro de alta específico
      parameters:
        - name: ID_Historial
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Detalles del registro de alta
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistorialAlta"
    put:
      summary: Editar un registro de alta existente
      parameters:
        - name: ID_Historial
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HistorialAlta"
      responses:
        "200":
          description: Registro de alta actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistorialAlta"
    delete:
      summary: Eliminar un registro de alta existente
      parameters:
        - name: ID_Historial
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Registro de alta eliminado

  /usuarios:
    get:
      summary: Obtener todos los usuarios
      responses:
        "200":
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Usuario"
    post:
      summary: Crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"
      responses:
        "201":
          description: Usuario creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"

  /usuarios/{ID_Usuario}:
    get:
      summary: Obtener un usuario específico
      parameters:
        - name: ID_Usuario
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Detalles del usuario
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
    put:
      summary: Editar un usuario existente
      parameters:
        - name: ID_Usuario
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"
      responses:
        "200":
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
    delete:
      summary: Eliminar un usuario existente
      parameters:
        - name: ID_Usuario
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Usuario eliminado

  /roles:
    get:
      summary: Obtener todos los roles
      responses:
        "200":
          description: Lista de roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Rol"
    post:
      summary: Crear un nuevo rol
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rol"
      responses:
        "201":
          description: Rol creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rol"

  /roles/{ID_Rol}:
    get:
      summary: Obtener un rol específico
      parameters:
        - name: ID_Rol
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Detalles del rol
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rol"
    put:
      summary: Editar un rol existente
      parameters:
        - name: ID_Rol
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rol"
      responses:
        "200":
          description: Rol actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rol"
    delete:
      summary: Eliminar un rol existente
      parameters:
        - name: ID_Rol
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Rol eliminado

components:
  schemas:
    Paciente:
      type: object
      properties:
        ID_Paciente:
          type: integer
          example: 1
        Nombre:
          type: string
          example: "Juan Pérez"
        Edad:
          type: integer
          example: 30
        Sintomas:
          type: string
          example: "Dolor de cabeza"
        Estado:
          type: string
          example: "Pendiente de cama"
        Fecha_Registro:
          type: string
          format: date-time
          example: "2023-07-08T12:34:56Z"
        Seguridad_Social:
          type: string
          example: "123456789"
        Direccion:
          type: string
          example: "Calle Falsa 123"
        Telefono:
          type: string
          example: "555-1234"
        Email:
          type: string
          example: "juan.perez@example.com"
        Historial_Medico:
          type: string
          example: "Sin historial relevante"

    Cama:
      type: object
      properties:
        Ubicacion:
          type: string
          example: "A101"
        Estado:
          type: string
          example: "Disponible"
        Tipo:
          type: string
          example: "Individual"

    Habitacion:
      type: object
      properties:
        ID_Habitacion:
          type: integer
          example: 1
        Edificio:
          type: string
          example: "A"
        Planta:
          type: string
          example: "1"
        Habitacion:
          type: string
          example: "101"

    Asignacion:
      type: object
      properties:
        ID_Asignacion:
          type: integer
          example: 1
        ID_Paciente:
          type: integer
          example: 1
        Ubicacion:
          type: string
          example: "A101"
        Fecha_Asignacion:
          type: string
          format: date-time
          example: "2023-07-08T12:34:56Z"
        Fecha_Liberacion:
          type: string
          format: date-time
          nullable: true
          example: "2023-07-09T12:34:56Z"
        Asignado_Por:
          type: integer
          example: 1

    HistorialAlta:
      type: object
      properties:
        ID_Historial:
          type: integer
          example: 1
        ID_Paciente:
          type: integer
          example: 1
        Fecha_Alta:
          type: string
          format: date-time
          example: "2023-07-10T12:34:56Z"
        Diagnostico:
          type: string
          example: "Migraña"
        Tratamiento:
          type: string
          example: "Analgésicos"

    Usuario:
      type: object
      properties:
        ID_Usuario:
          type: integer
          example: 1
        Nombre:
          type: string
          example: "Admin"
        Usuario:
          type: string
          example: "admin"
        Contraseña:
          type: string
          example: "hashed_password"
        ID_Rol:
          type: integer
          example: 1

    Rol:
      type: object
      properties:
        ID_Rol:
          type: integer
          example: 1
        Nombre_Rol:
          type: string
          example: "Administrador"
